var express = require('express');
var app = express();
var http = require('http');
var server = http.createServer(app);
var io = require('socket.io')(server);

var request = require('request');
var bodyParser = require('body-parser');
var fs = require('fs');

var port=8000;
server.listen(port);

// Routing
app.use(bodyParser.json({limit:'20mb'}));
//querystring : false, qs library : true
app.use(bodyParser.urlencoded({extended: false, limit:'20mb'}));
app.use(function(req, res, next) {
  res.header("Access-Control-Allow-Origin", "*");
  res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
  next();
});
app.use(express.static(__dirname + '/public'));

//proxy from webcam server to avoid CORS complaining
app.get('/stream1',function(req,res){
  var url="http://122.46.145.125:18081/"
  request(url).pipe(res);
});
app.get('/stream2',function(req,res){
  var url="http://camera.nton.lviv.ua/mjpg/video.mjpg"
  request(url).pipe(res);
});
app.get('/stream3',function(req,res){
  var url="http://194.248.190.92/mjpg/video.mjpg"
  request(url).pipe(res);
});
app.get('/stream4',function(req,res){
  var url="http://writm.com/wp-content/uploads/2016/08/Cat-hd-wallpapers.jpg"
  request(url).pipe(res);
});
app.get('/stream5',function(req,res){
  var url="https://pixabay.com/static/uploads/photo/2016/05/18/20/57/cat-1401557_960_720.jpg"
  request(url).pipe(res);
});
app.get('/stream6',function(req,res){
  var url="https://pixabay.com/static/uploads/photo/2014/03/29/09/17/cat-300572_960_720.jpg"
  request(url).pipe(res);
});
app.get('/stream7',function(req,res){
  var url="http://www.rd.com/wp-content/uploads/sites/2/2016/02/06-train-cat-shake-hands.jpg"
  request(url).pipe(res);
});
app.get('/stream8',function(req,res){
  var url="http://rollycat.com/wp-content/uploads/2014/09/apple-mac-cat-face-like-angel-soul_342655.jpg"
  request(url).pipe(res);
});
app.get('/stream9',function(req,res){
  var url="https://s-media-cache-ak0.pinimg.com/564x/29/9e/56/299e56ab07c75af6407289ecc4ab1dd6.jpg"
  request(url).pipe(res);
});
//this part needs to be migrated to raspberry pi.
app.post('/print', function(req,res){
  // string generated by canvas.toDataURL()
  var img = req.body.imgBase64
  // strip off the data: url prefix to get just the base64-encoded bytes
  var data = img.replace(/^data:image\/\w+;base64,/, "");
  var buf = new Buffer(data, 'base64');
  fs.writeFile('public/image.png', buf);
  console.log('print');
  io.sockets.emit('print');
});


// Socket.io


io.on('connection', function (socket) {

  // when the client emits 'camera capture', this listens and executes
  socket.on('camera capture', function (data) {
    // we broadcast to everyone execute 'camera capture'
    io.sockets.emit('camera capture', {
      username: data
    });
  });

});
